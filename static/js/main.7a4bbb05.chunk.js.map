{"version":3,"sources":["assets/noPosterSmall.png","Components/Section.js","Components/Loader.js","Components/Message.js","Components/Poster.js","Routes/Home/HomePresenter.js","api.js","Routes/Home/index.js","Routes/Home/HomeContainer.js","Routes/TV/TVPresenter.js","Routes/TV/index.js","Routes/TV/TVContainer.js","Routes/Search/SearchPresenter.js","Routes/Search/index.js","Routes/Search/SearchContainer.js","Components/Header.js","Routes/Detail/DetailPresenter.js","Routes/Detail/index.js","Routes/Detail/DetailContainer.js","Components/Router.js","Components/GlobalStyles.js","Components/App.js","index.js"],"names":["module","exports","__webpack_require__","p","Container","styled","div","_templateObject","Title","span","_templateObject2","Grid","_templateObject3","Section","_ref","title","children","react_default","a","createElement","Loader_templateObject","Loader","Loader_Container","role","aria-label","Message_templateObject","Text","Message_templateObject2","props","color","Message","text","Message_Container","Poster_templateObject","Image","Poster_templateObject2","bgUrl","Rating","Poster_templateObject3","ImageContainer","_templateObject4","_templateObject5","Year","_templateObject6","Poster","id","imageUrl","rating","year","_ref$isMovie","isMovie","react_router_dom","to","concat","Poster_Container","require","Poster_Title","length","substring","propType","PropTypes","number","isRequired","string","bool","HomePresenter_templateObject","HomePresenter","nowPlaying","popular","upcoming","loading","error","Fragment","Helmet_default","HomePresenter_Container","Components_Section","map","movie","Components_Poster","key","poster_path","vote_average","release_date","Components_Message","api","axios","create","baseURL","params","api_key","language","moviesApi","get","movieDetail","append_to_response","search","term","query","encodeURIComponent","tvApi","topRated","airingToday","showDetail","HomeContainer","state","data","results","this","setState","_this$state","Home_HomePresenter","React","Component","TVPresenter_templateObject","TVPresenter","TVPresenter_Container","show","name","first_air_date","TVContainer","componentDidMount","_callee","_ref2","_ref3","_ref4","regenerator_default","wrap","_context","prev","next","sent","_this","t0","finish","stop","TV_TVPresenter","SearchPresenter_templateObject","Form","form","SearchPresenter_templateObject2","Input","input","SearchPresenter_templateObject3","SearchPresenter","movieResults","tvResults","handleSubmit","searchTerm","updateTerm","SearchPresenter_Container","onSubmit","placeholder","value","onChange","original_title","original_name","SearchContainer","event","preventDefault","searechByTerm","target","console","log","Search_SearchPresenter","Header","header","Header_templateObject","List","ul","Header_templateObject2","Item","li","Header_templateObject3","current","SLink","Link","Header_templateObject4","withRouter","pathname","location","DetailPresenter_templateObject","Backdrop","DetailPresenter_templateObject2","bgImage","Content","DetailPresenter_templateObject3","Cover","DetailPresenter_templateObject4","Data","DetailPresenter_templateObject5","h3","DetailPresenter_templateObject6","ItemContainer","_templateObject7","_templateObject8","Divider","_templateObject9","Overview","_templateObject10","DetailPresenter","result","DetailPresenter_Container","backdrop_path","DetailPresenter_Title","DetailPresenter_Item","runtime","episode_run_time","genres","genre","index","overview","DetailContainer","_default","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","asyncToGenerator","mark","push","parsedId","match","history","parseInt","isNaN","includes","Detail_DetailPresenter","Router","Components_Header","react_router","path","exact","component","Home","TV","Search","Detail","from","globalStyles","createGlobalStyle","GlobalStyles_templateObject","reset","App","GlobalStyles","ReactDOM","render","Components_App","document","getElementById"],"mappings":"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","file":"static/js/main.7a4bbb05.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/noPosterSmall.87a0eb6a.png\";","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\n\r\nconst Container = styled.div`\r\n  :not(:last-child) {\r\n    margin-bottom: 50px;\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  font-size: 14px;\r\n  font-weight: 600;\r\n`;\r\n\r\nconst Grid = styled.div`\r\n  margin-top: 25px;\r\n  display: grid;\r\n  grid-template-columns: repeat(auto-fill, 125px);\r\n  grid-gap:25px;\r\n`;\r\n// grid 학습하기\r\nconst Section = ({ title, children }) => (\r\n  <Container>\r\n    <Title>{title}</Title>\r\n    <Grid>{children}</Grid>\r\n  </Container>\r\n);\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  children: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.node),\r\n    PropTypes.node\r\n  ])\r\n};\r\n\r\nexport default Section;\r\n\r\n/** children\r\n *  예약된 react prop\r\n */\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    height : 100vh;\r\n    width: 100vh;\r\n    display: flex;\r\n    justify-content: center;\r\n    font-size: 30px;\r\n    margin-top: 20px;\r\n`;\r\n\r\nexport default () => (\r\n  <Container>\r\n    <span role=\"img\" aria-label=\"Loading\">\r\n      Loading...\r\n    </span>\r\n  </Container>\r\n);\r\n\r\n","import React from 'react';\r\nimport PropType from 'prop-types';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n    width:100vw;\r\n    display:flex;\r\n    justify-content:center;\r\n`;\r\n\r\nconst Text = styled.span`\r\n    color: ${props => props.color};\r\n    font-weight:600;\r\n`;\r\n\r\nconst Message = ({ text, color }) => (\r\n  <Container>\r\n    <Text color={color}>{text}</Text>\r\n  </Container>\r\n);\r\n\r\nMessage.propTypes = {\r\n    text: PropType.string.isRequired,\r\n    color: PropType.string.isRequired\r\n};\r\n\r\nexport default Message;","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Container = styled.div`\r\n  font-size: 12px;\r\n`;\r\n\r\nconst Image = styled.div`\r\n  background-image: url(${props => props.bgUrl});\r\n  height: 180px;\r\n  background-size: cover;\r\n  border-radius: 4px;\r\n  background-position: center center;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst Rating = styled.span`\r\n  bottom: 5px;\r\n  right: 5px;\r\n  position: absolute;\r\n  opacity: 0;\r\n  transition: opacity 0.1s linear;\r\n`;\r\n\r\nconst ImageContainer = styled.div`\r\n  margin-bottom: 5px;\r\n  position: relative;\r\n  &:hover {\r\n    ${Image} {\r\n      opacity: 0.3;\r\n    }\r\n    ${Rating} {\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst Title = styled.span`\r\n  display: block;\r\n  margin-bottom: 3px;\r\n`;\r\n\r\nconst Year = styled.span`\r\n  font-size: 10px;\r\n  color: rgba(255, 255, 255, 0.5);\r\n`;\r\n\r\nconst Poster = ({ id, imageUrl, title, rating, year, isMovie = false }) => (\r\n  <Link to={isMovie ? `/movie/${id}` : `/show/${id}`}>\r\n    <Container>\r\n      <ImageContainer>\r\n        <Image\r\n          bgUrl={\r\n            imageUrl\r\n              ? `https://image.tmdb.org/t/p/w300${imageUrl}`\r\n              : require(\"../assets/noPosterSmall.png\")\r\n          }\r\n        />\r\n        <Rating>\r\n          <span role=\"img\" aria-label=\"rating\">\r\n            ⭐️\r\n          </span>{\" \"}\r\n          {rating}/10\r\n        </Rating>\r\n      </ImageContainer>\r\n      <Title>\r\n        {title.length > 18 ? `${title.substring(0, 18)}...` : title}\r\n      </Title>\r\n      <Year>{year}</Year>\r\n    </Container>\r\n  </Link>\r\n);\r\nPoster.propType = {\r\n  id: PropTypes.number.isRequired,\r\n  imageUrl: PropTypes.string,\r\n  title: PropTypes.string.isRequired,\r\n  rating: PropTypes.number,\r\n  year: PropTypes.string,\r\n  isMovie: PropTypes.bool\r\n};\r\n\r\nexport default Poster;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styled from 'styled-components';\r\nimport Section from 'Components/Section';\r\nimport Loader from '../../Components/Loader';\r\nimport Message from '../../Components/Message';\r\nimport Poster from '../../Components/Poster';\r\nimport Helmet from 'react-helmet';\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst HomePresenter = ({ nowPlaying, popular, upcoming, loading, error }) => (\r\n    <>\r\n      <Helmet>\r\n        <title>Movies | Nomflix</title>\r\n      </Helmet>\r\n      {loading ? (\r\n        <Loader />\r\n      ) : (\r\n        <Container>\r\n          <Helmet>\r\n            <title>Movies | Nomflix</title>\r\n          </Helmet>\r\n          {nowPlaying && nowPlaying.length > 0 && (\r\n            <Section title=\"Now Playing\">\r\n              {nowPlaying.map(movie => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageUrl={movie.poster_path}\r\n                  title={movie.title}\r\n                  rating={movie.vote_average}\r\n                  year={movie.release_date.substring(0, 4)}\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {upcoming && upcoming.length > 0 && (\r\n            <Section title=\"Upcoming Movies\">\r\n              {upcoming.map(movie => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageUrl={movie.poster_path}\r\n                  title={movie.title}\r\n                  rating={movie.vote_average}\r\n                  year={movie.release_date.substring(0, 4)}\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {popular && popular.length > 0 && (\r\n            <Section title=\"Popular Movies\">\r\n              {popular.map(movie => (\r\n                <Poster\r\n                  key={movie.id}\r\n                  id={movie.id}\r\n                  imageUrl={movie.poster_path}\r\n                  title={movie.title}\r\n                  rating={movie.vote_average}\r\n                  year={movie.release_date.substring(0, 4)}\r\n                  isMovie={true}\r\n                />\r\n              ))}\r\n            </Section>\r\n          )}\r\n          {error && <Message color=\"#e74c3c\" text={error} />}\r\n        </Container>\r\n      )}\r\n    </>\r\n  );\r\n\r\nHomePresenter.propTypes = {\r\n    nowPlaying: PropTypes.array,\r\n    upcoming: PropTypes.array,\r\n    popular: PropTypes.array,\r\n    loading: PropTypes.bool.isRequired,\r\n    error: PropTypes.string\r\n}\r\n\r\nexport default HomePresenter;","import axios from 'axios';\r\n\r\nconst api = axios.create({\r\n    baseURL: 'https://api.themoviedb.org/3/',\r\n    params:{\r\n        api_key: '52a6ae5991d0233dac6df1057040687f',\r\n        language: 'ko-KR'\r\n        }\r\n});\r\n\r\n\r\n\r\n\r\nexport const moviesApi = {\r\n    nowPlaying: () => api.get('movie/now_playing'),\r\n    upcoming: () => api.get('movie/upcoming'),\r\n    popular: () => api.get('movie/popular'),\r\n    movieDetail: id => api.get(`movie/${id}`,{\r\n        params:{\r\n            append_to_response: 'videos'\r\n        }\r\n    }),\r\n    search: term =>\r\n    api.get('search/movie',{\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n        }\r\n    })\r\n};\r\n\r\nexport const tvApi = {\r\n    topRated: () => api.get('tv/top_rated'),\r\n    popular: () => api.get('tv/popular'),\r\n    airingToday: () => api.get('tv/airing_today'),\r\n    showDetail: id => api.get(`tv/${id}`,{\r\n        params:{\r\n            append_to_response: 'videos'\r\n        }\r\n    }),\r\n    search: term =>\r\n    api.get('search/tv',{\r\n        params: {\r\n            query: encodeURIComponent(term)\r\n        }\r\n    })\r\n}\r\n","import HomeContainer from './HomeContainer';\r\n\r\nexport default HomeContainer;","import React from 'react';\r\nimport HomePresenter from './HomePresenter';\r\nimport { moviesApi } from '../../api';\r\n\r\n\r\n// ## Basic order\r\n// componentWillMount( ) > render( ) > componentDidMount( )\r\n\r\n// ## UPDATE (come in new props)\r\n// componentWillReciveProps( ) > shouldComponentUpdate( ) > componentWillUpdate( ) > render( ) > componentDidUpdate( )\r\n\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        nowPlaying: null,\r\n        upcoming: null,\r\n        popular: null,\r\n        error: null,\r\n        loading: true\r\n    };\r\n\r\n    async componentDidMount(){ \r\n        try {\r\n            const {\r\n                data: {\r\n                    results : nowPlaying\r\n                }\r\n            } = await moviesApi.nowPlaying();\r\n\r\n            const {\r\n                data : {\r\n                    results : upcoming\r\n                }\r\n            } = await moviesApi.upcoming();\r\n            const {\r\n                data: {\r\n                    results : popular\r\n                }\r\n            } = await moviesApi.popular();\r\n            this.setState({\r\n                nowPlaying,\r\n                upcoming,\r\n                popular\r\n            })\r\n        } catch (error) {\r\n            this.setState({\r\n                error: \"Can't find movies information.\"\r\n            })\r\n        } finally{\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { nowPlaying, upcoming, popular, error, loading } = this.state;\r\n        return (    \r\n            <HomePresenter\r\n                nowPlaying={nowPlaying}\r\n                upcoming={upcoming}\r\n                popular={popular}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        );\r\n    }\r\n}","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Section from \"../../Components/Section\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 20px;\r\n`;\r\n\r\nconst TVPresenter = ({ topRated, popular, airingToday, error, loading }) =>\r\n  <>\r\n  <Helmet><title>TV Show | Nomflix</title></Helmet>\r\n  {loading ? (\r\n    <Loader />\r\n  ) : (\r\n    <Container>\r\n      {topRated && topRated.length > 0 && (\r\n        <Section title=\"Top Rated Shows\">\r\n          {topRated.map(show => (\r\n            <Poster\r\n            key={show.id}\r\n            id={show.id}\r\n            title={show.name}\r\n            imageUrl={show.poster_path}\r\n            rating={show.vote_average}\r\n            year={show.first_air_date.substring(0, 4)}\r\n          />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {popular && popular.length > 0 && (\r\n        <Section title=\"Popular Shows\">\r\n          {popular.map(show => (\r\n            <Poster\r\n            key={show.id}\r\n            id={show.id}\r\n            title={show.name}\r\n            imageUrl={show.poster_path}\r\n            rating={show.vote_average}\r\n            year={show.first_air_date.substring(0, 4)}\r\n          />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {airingToday && airingToday.length > 0 && (\r\n        <Section title=\"AiringToday Shows\">\r\n          {airingToday.map(show => (\r\n            <Poster\r\n            key={show.id}\r\n            id={show.id}\r\n            title={show.name}\r\n            imageUrl={show.poster_path}\r\n            rating={show.vote_average}\r\n            year={show.first_air_date.substring(0, 4)}\r\n          />\r\n          ))}\r\n        </Section>\r\n      )}\r\n      {error && <Message color=\"#c23616\" text={error} />}\r\n    </Container>\r\n  )}\r\n  </>;\r\n\r\nTVPresenter.propTypes = {\r\n  topRated: PropTypes.array,\r\n  popular: PropTypes.array,\r\n  airingToday: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default TVPresenter;\r\n","import TVContainer from './TVContainer';\r\n\r\nexport default TVContainer;","import React from 'react';\r\nimport TVPresenter from './TVPresenter';\r\nimport { tvApi } from '../../api';\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        topRated: null,\r\n        popular: null,\r\n        airingToday: null,\r\n        error: null,\r\n        loading: true\r\n    };\r\n\r\n    componentDidMount = async() => {\r\n        try {\r\n            const { \r\n                data : { \r\n                    results : topRated \r\n                }\r\n            } = await tvApi.topRated();\r\n            const { \r\n                data : { \r\n                    results : popular \r\n                }\r\n            } = await tvApi.popular();\r\n            const { \r\n                data : { \r\n                    results : airingToday \r\n                }\r\n            } = await tvApi.airingToday();\r\n            this.setState({\r\n                topRated,\r\n                popular,\r\n                airingToday\r\n            });\r\n        } catch (error) {\r\n            this.setState({\r\n                error: \"Can't find TV information.\"\r\n            });\r\n        } finally{\r\n            this.setState({\r\n                loading: false\r\n            });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const { topRated, popular, airingToday, error, loading } = this.state;\r\n        return (    \r\n            <TVPresenter\r\n                topRated={topRated}\r\n                popular={popular}\r\n                airingToday={airingToday}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        );\r\n    }\r\n}\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Section from \"../../Components/Section\";\r\nimport Message from \"../../Components/Message\";\r\nimport Poster from \"../../Components/Poster\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  padding: 0px 20px;\r\n`;\r\n\r\nconst Form = styled.form`\r\n  margin-bottom: 50px;\r\n  width: 100%;\r\n`;\r\n\r\nconst Input = styled.input`\r\n  all: unset;\r\n  font-size: 28px;\r\n  width: 100%;\r\n`;\r\n\r\nconst SearchPresenter = ({\r\n  movieResults,\r\n  tvResults,\r\n  loading,\r\n  handleSubmit,\r\n  error,\r\n  searchTerm,\r\n  updateTerm\r\n}) => (\r\n  <Container>\r\n      <Helmet><title> Search | Nomflix </title></Helmet>\r\n    <Form onSubmit={handleSubmit}>\r\n      <Input\r\n        placeholder=\"Search Movies or TV Shows...\"\r\n        value={searchTerm}\r\n        onChange={updateTerm}\r\n      />\r\n    </Form>\r\n    {loading ? (\r\n      <Loader />\r\n    ) : (\r\n      <>\r\n        {movieResults && movieResults.length > 0 && (\r\n          <Section title=\"Movie Results\">\r\n            {movieResults.map(movie => (\r\n              <Poster\r\n                key={movie.id}\r\n                id={movie.id}\r\n                title={movie.original_title}\r\n                imageUrl={movie.poster_path}\r\n                isMovie={true}\r\n                rating={movie.vote_average}\r\n                year={movie.release_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n        {tvResults && tvResults.length > 0 && (\r\n          <Section title=\"TV Show Results\">\r\n            {tvResults.map(show => (\r\n              <Poster\r\n                key={show.id}\r\n                id={show.id}\r\n                title={show.original_name}\r\n                imageUrl={show.poster_path}\r\n                rating={show.vote_average}\r\n                year={show.first_air_date.substring(0, 4)}\r\n              />\r\n            ))}\r\n          </Section>\r\n        )}\r\n      </>\r\n    )}\r\n    {error && <Message color=\"#c23616\" text={error} />}\r\n    {tvResults && movieResults && tvResults.length === 0 && (\r\n      <Message text=\"Nothing found\" color=\"#e1b12c\" />\r\n    )}\r\n  </Container>\r\n);\r\n\r\nSearchPresenter.propTypes = {\r\n  movieResults: PropTypes.array,\r\n  tvResults: PropTypes.array,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string,\r\n  SearchTerm: PropTypes.string,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  updateTerm: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SearchPresenter;\r\n","import SearchContainer from './SearchContainer';\r\n\r\nexport default SearchContainer;","import React from 'react';\r\nimport SearchPresenter from './SearchPresenter';\r\nimport { moviesApi, tvApi } from '../../api';\r\n\r\nexport default class extends React.Component {\r\n    state = {\r\n        movieResults: null,\r\n        tvResults: null,\r\n        searchTerm: \"\",\r\n        loading: false,\r\n        error: null\r\n\r\n    };\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault();\r\n        const { searchTerm } = this.state;\r\n        if ( searchTerm !== \"\" ) {\r\n            this.searechByTerm();\r\n        }\r\n    }\r\n\r\n    updateTerm = (event) =>{\r\n        const { target : { value } } = event;\r\n        this.setState({\r\n            searchTerm: value\r\n        });\r\n    }\r\n\r\n    searechByTerm = async () => {\r\n        const { searchTerm } = this.state;\r\n        this.setState({\r\n            loading: true\r\n        });\r\n        try {\r\n            const { data: { results: movieResults } } = await moviesApi.search(searchTerm);\r\n            const { data: { results: tvResults } } = await tvApi.search(searchTerm);\r\n            this.setState({\r\n                movieResults,\r\n                tvResults\r\n            });\r\n        } catch (error) {\r\n            this.setState({ error: \"Can't find results.\" });\r\n        } finally{\r\n            this.setState({ loading: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        const {movieResults, tvResults, searchTerm, loading, error} = this.state;\r\n        console.log(this.state);\r\n        return (    \r\n            <SearchPresenter\r\n            movieResults={movieResults}\r\n            tvResults={tvResults}\r\n            searchTerm={searchTerm}\r\n            loading={loading}\r\n            error={error}\r\n            handleSubmit={this.handleSubmit}\r\n            updateTerm={this.updateTerm}\r\n            />\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport styled from 'styled-components'\r\nimport { Link, withRouter } from 'react-router-dom'\r\n\r\nconst Header = styled.header`\r\n  color:white;\r\n  position:fixed;\r\n  top:0;\r\n  left:0;\r\n  width:100%;\r\n  height:50px;\r\n  display:flex;\r\n  align-items:center;\r\n  padding: 0px 10px;\r\n  background-color:rgba(20,20,20,0.7);\r\n  z-index: 10;\r\n  box-shadow: 0px 1px 5px 2px rgba(0, 0, 0, 0.8);\r\n`;\r\n\r\nconst List = styled.ul`\r\n  display:flex;\r\n`;\r\n\r\nconst Item = styled.li`\r\n  width: 80px;\r\n  height: 50px;\r\n  text-align: center;\r\n  border-bottom: 5px solid ${props => props.current? '#9b59b6' : 'transparent'};\r\n  transition:border-bottom .5s ease-in-out;\r\n`;\r\n\r\nconst SLink = styled(Link)`\r\n  height: 50px;\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n`;\r\n\r\n\r\nexport default withRouter( ({location:{pathname}}) =>(\r\n    <Header>\r\n      <List>\r\n        <Item current={pathname ==='/'}>\r\n          <SLink to=\"/\">Movies</SLink>\r\n        </Item>\r\n        <Item current={pathname ==='/tv'}>\r\n          <SLink to=\"/tv\">TV</SLink>\r\n        </Item>\r\n        <Item current={pathname ==='/search'}>\r\n          <SLink to=\"/search\">Search</SLink>\r\n        </Item>\r\n      </List>\r\n    </Header>\r\n  ));\r\n\r\n/** Link\r\n *  해당 페이지가 내 어플리케이션에 있으면\r\n *  그 곳으로 브라우져한 방식으로 가지 않고\r\n *  javaScript 방식으로 이동\r\n * \r\n */\r\n\r\n /** withRouter\r\n *  다른 컴포넌트를 감싸는 컴포넌트\r\n *  그리고 Router에 어떠한 정보를 쥐어준다.\r\n *  위 설명은 withRouter로 감싸면 props가 생기는 것을 말한다.\r\n */","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styled from \"styled-components\";\r\nimport Loader from \"../../Components/Loader\";\r\nimport Helmet from \"react-helmet\";\r\n\r\nconst Container = styled.div`\r\n  height: calc(100vh - 50px);\r\n  width: 100%;\r\n  position: relative;\r\n  padding: 50px;\r\n`;\r\nconst Backdrop = styled.div`\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0;\r\n  width: 100%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  filter: blur(2px);\r\n  opacity: 0.5;\r\n  z-index: 0;\r\n`;\r\n\r\nconst Content = styled.div`\r\n  display: flex;\r\n  width:100%;\r\n  position:relative;\r\n  z-index:1;\r\n  height: 100%;\r\n`;\r\n\r\nconst Cover = styled.div`\r\n  width: 30%;\r\n  height: 100%;\r\n  background-image: url(${props => props.bgImage});\r\n  background-position: center center;\r\n  background-size: cover;\r\n  border-radius:5px;\r\n`;\r\n\r\nconst Data = styled.div`\r\n    width:70%;\r\n    margin-left: 10px;\r\n`;\r\n\r\nconst Title = styled.h3`\r\n  font-size: 32px;\r\n  margin-bottom: 10px;\r\n`;\r\n\r\nconst ItemContainer = styled.div``;\r\n\r\nconst Item = styled.span``;\r\n\r\nconst Divider = styled.span`\r\n  margin: 10px;\r\n`;\r\n\r\nconst Overview = styled.p`\r\nmargin-top:10px;\r\nfont-size:12px;\r\nopacity:0.7;\r\nline-height:1.5;\r\nwidth: 50%;\r\n`;\r\n\r\n\r\nconst DetailPresenter = ({ result, error, loading }) =>\r\n  loading ? (\r\n    <>\r\n      <Helmet>\r\n        <title>Loading | Nomflix</title>\r\n      </Helmet>\r\n      <Loader />\r\n    </>\r\n  ) : (\r\n    <Container>\r\n        <Helmet>\r\n        <title>{result.title ? result.title : result.name} | Nomflix</title>\r\n      </Helmet>\r\n      <Backdrop\r\n        bgImage={`https://image.tmdb.org/t/p/original${result.backdrop_path}`}\r\n      />\r\n      <Content>\r\n        <Cover\r\n          bgImage={\r\n            result.poster_path\r\n              ? `https://image.tmdb.org/t/p/original${result.poster_path}`\r\n              : require(\"../../assets/noPosterSmall.png\")\r\n          }\r\n        />\r\n        <Data>\r\n          <Title> {result.title ? result.title : result.name}</Title>\r\n          <ItemContainer>\r\n            <Item>\r\n              {\" \"}\r\n              {result.release_date\r\n                ? result.release_date.substring(0, 4)\r\n                : result.first_air_date.substring(0, 4)}\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.runtime ? result.runtime : result.episode_run_time[0]} min\r\n            </Item>\r\n            <Divider>•</Divider>\r\n            <Item>\r\n              {result.genres &&\r\n                result.genres.map((genre, index) =>\r\n                  index === result.genres.length - 1\r\n                    ? genre.name\r\n                    : `${genre.name} / `\r\n                )}\r\n            </Item>\r\n          </ItemContainer>\r\n          <Overview>{result.overview}</Overview>\r\n        </Data>\r\n      </Content>\r\n    </Container>\r\n  );\r\n\r\nDetailPresenter.propTypes = {\r\n  result: PropTypes.object,\r\n  loading: PropTypes.bool.isRequired,\r\n  error: PropTypes.string\r\n};\r\n\r\nexport default DetailPresenter;\r\n","import DetailContainer from './DetailContainer';\r\n\r\nexport default DetailContainer;","import React from 'react';\r\nimport DetailPresenter from './DetailPresenter';\r\nimport { moviesApi, tvApi } from '../../api';\r\n\r\nexport default class extends React.Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        const { location : { pathname } } =  props;\r\n        this.state = {\r\n            result: null,\r\n            error: null,\r\n            loading: true,\r\n            isMovie: pathname.includes('/movie/')\r\n        };\r\n    }\r\n    \r\n\r\n\r\n    componentDidMount = async () => {\r\n        const {match : {\r\n            params : { id }\r\n            },\r\n            history : { push },\r\n        } = await this.props\r\n        const { isMovie } = this.state;\r\n        const parsedId = parseInt(id);\r\n        if(isNaN(parsedId)){\r\n            push('/');\r\n        }\r\n        let result=null; \r\n        try {\r\n            if(isMovie){\r\n                ({data: result} = await moviesApi.movieDetail(parsedId));\r\n            }else{\r\n                ({data: result} = await tvApi.showDetail(parsedId));\r\n            }\r\n            \r\n        } catch (error) {\r\n            this.setState({ error: \"Can't find anything\" })\r\n        } finally {\r\n            this.setState({ loading : false, result })\r\n        }\r\n        \r\n    }\r\n\r\n\r\n\r\n    render() {\r\n        const { result, error, loading } = this.state;\r\n        console.log(result);\r\n        return (    \r\n            <DetailPresenter\r\n                result={result}\r\n                error={error}\r\n                loading={loading}\r\n            />\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom';\r\nimport Home from 'Routes/Home'\r\nimport TV from 'Routes/TV';\r\nimport Search from 'Routes/Search';\r\nimport Header from './Header';\r\nimport Detail from 'Routes/Detail';\r\n\r\nexport default () => (\r\n    <Router>\r\n      <>\r\n        <Header />\r\n        <Switch>\r\n          <Route path=\"/\" exact component={Home} />\r\n          <Route path=\"/tv\" component={TV} />\r\n          <Route path=\"/search\" component={Search} />\r\n          <Route path=\"/movie/:id\" component={Detail} />\r\n          <Route path=\"/show/:id\" component={Detail} />\r\n          <Redirect from=\"*\" to=\"/\" />\r\n        </Switch>\r\n      </>\r\n    </Router>\r\n  );\r\n\r\n/** Router > Route\r\n * exact - 주어진 경로가 정확해야 작동\r\n * exact를 넣지 않으면 /tv로 시작하는 뭐가 들어와도 일치가 된다.\r\n * ex) /tv/popular ~라던지 한번에 두개가 렌더 됨.\r\n * path - url 경로\r\n * component - 해당 컴포넌트\r\n * Redirect from='*' to='/' 일치하는 라우터가 없을 경우 \r\n * 어느 페이지든 받아서 /로 보낸다.\r\n * \r\n */\r\n","import { createGlobalStyle} from 'styled-components';\r\nimport reset from 'styled-reset';\r\n\r\n\r\nconst globalStyles = createGlobalStyle`\r\n    ${reset};\r\n    a{\r\n        text-decoration:none;\r\n        color:inherit;\r\n    }\r\n    *{\r\n        box-sizing:border-box;\r\n    }\r\n    body{\r\n        font-family:-apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\r\n        font-size:14px;\r\n        background-color:rgba(20,20,20,1);\r\n        color:white;\r\n        padding-top:50px;\r\n    }\r\n\r\n`;\r\n\r\nexport default globalStyles;\r\n\r\n/** styled-reset\r\n * SC(styled-component)를 이용해서 \r\n * css를 초기화 한 상태에서 시작하게 만듦\r\n * \r\n */","import React, {Component} from 'react';\nimport Router from './Router';\nimport GlobalStyles from './GlobalStyles';\n\n\nclass App extends Component {\n  render(){\n    return (\n      <>\n      <Router/>\n      <GlobalStyles/>\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'Components/App';\nimport './api';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}